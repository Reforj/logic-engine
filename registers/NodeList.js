/* eslint-disable max-len */

export default [
  {
    title: 'Logic',
    key: 'logic',
    selectable: false,
    category: true,
    children: [
      {
        key: 'Logic.Not',
        title: '! (Not)',
        type: 'Operator',
        nodeTitle: 'NOT',
        path: 'Logic.Not',
        pure: true,
        inputs: [{ dataType: 'boolean', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.And',
        title: '&& (And)',
        type: 'Operator',
        nodeTitle: 'AND',
        path: 'Logic.And',
        pure: true,
        inputs: [{ dataType: 'boolean', defaultValue: false }, { dataType: 'boolean', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
        canAddInputs: true,
      },
      {
        key: 'Logic.Or',
        title: '|| (Or)',
        type: 'Operator',
        nodeTitle: 'OR',
        path: 'Logic.Or',
        pure: true,
        inputs: [{ dataType: 'boolean', defaultValue: false }, { dataType: 'boolean', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
        canAddInputs: true,
      },
      {
        key: 'Logic.Equal',
        title: '=== (Equal)',
        type: 'Operator',
        nodeTitle: 'EQUAL',
        path: 'Logic.Equal',
        pure: true,
        inputs: [{ dataType: 'any', defaultValue: false }, { dataType: 'any', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.NotEqual',
        title: '!== (NotEqual)',
        type: 'Operator',
        nodeTitle: 'NOT EQUAL',
        path: 'Logic.NotEqual',
        pure: true,
        inputs: [{ dataType: 'any', defaultValue: false }, { dataType: 'any', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.Greater',
        title: '> (Greater)',
        type: 'Operator',
        nodeTitle: '>',
        path: 'Logic.Greater',
        pure: true,
        inputs: [{ dataType: 'number', defaultValue: false }, { dataType: 'number', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.Less',
        title: '< (Less)',
        type: 'Operator',
        nodeTitle: '<',
        path: 'Logic.Less',
        pure: true,
        inputs: [{ dataType: 'number', defaultValue: false }, { dataType: 'number', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.GreaterEqual',
        title: '>= (GreaterEqual)',
        type: 'Operator',
        nodeTitle: '>=',
        path: 'Logic.GreaterEqual',
        pure: true,
        inputs: [{ dataType: 'number', defaultValue: false }, { dataType: 'number', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
      {
        key: 'Logic.LessEqual',
        title: '<= (LessEqual)',
        type: 'Operator',
        nodeTitle: '<=',
        path: 'Logic.LessEqual',
        pure: true,
        inputs: [{ dataType: 'number', defaultValue: false }, { dataType: 'number', defaultValue: false }],
        outputs: [{ dataType: 'boolean' }],
      },
    ],
  },
  {
    title: 'Operator',
    key: 'operators',
    selectable: false,
    category: true,
    children: [
      {
        key: 'Operator.Plus',
        title: 'Number + Number(Plus)',
        type: 'Operator',
        nodeTitle: '+',
        path: 'Operator.Plus',
        pure: true,
        inputs: [{ dataType: 'number', defaultValue: 0 }, { dataType: 'number', defaultValue: 0 }],
        outputs: [{ dataType: 'number' }],
      },
      {
        key: 'Operator.PlusString',
        title: 'String + String(concan)',
        type: 'Operator',
        nodeTitle: '+',
        path: 'Operator.Plus',
        pure: true,
        inputs: [{ dataType: 'string', defaultValue: '' }, { dataType: 'string', defaultValue: '' }],
        outputs: [{ dataType: 'string' }],
      },
    ],
  },
  {
    title: 'Debug',
    key: 'debugs',
    selectable: false,
    category: true,
    children: [
      {
        key: 'Debug.Log', title: 'Console.Log', type: 'CallLibrary', path: 'Debug.Log', pure: false, inputs: [{}],
      },
    ],
  },
  {
    title: 'Flow',
    key: 'flow',
    selectable: false,
    category: true,
    children: [
      { key: 'Branch', title: 'Branch', type: 'Branch' },
    ],
  },
  {
    key: 'ReturnNode',
    title: 'Return Node',
    type: 'Return',
  },
]
